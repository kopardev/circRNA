{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"circRNA DAQ Pipeline DAQ = D etection A nnotation Q uantification) Description This circularRNA detection pipeline uses the following tools in parallel to detect, annotate and quantify circRNAs: CircExplorer2 1 CIRI2 2 CLEAR 3 References 1 Zhang XO , Dong R , Zhang Y, Zhang JL, Luo Z, Zhang J, Chen LL, Yang L. Diverse alternative back-splicing and alternative splicing landscape of circular RNAs. Genome Res , 2016, 26:1277-1287 doi:10.1101/gr.202895.115 2 Yuan Gao, Jinyang Zhang and Fangqing Zhao. Circular RNA identification based on multiple seed matching. Briefings in Bioinformatics (2017) doi: 10.1093/bib/bbx014. 3 Ma XK, Wang MR, Liu CX, Dong R, Carmichael GG, Chen LL and Yang L. A CLEAR pipeline for direct comparison of circular and linear RNA expression. 2019, bioRxiv doi: 10.1101/668657","title":"Home"},{"location":"#circrna-daq-pipeline","text":"DAQ = D etection A nnotation Q uantification)","title":"circRNA DAQ  Pipeline"},{"location":"#description","text":"This circularRNA detection pipeline uses the following tools in parallel to detect, annotate and quantify circRNAs: CircExplorer2 1 CIRI2 2 CLEAR 3","title":"Description"},{"location":"#references","text":"1 Zhang XO , Dong R , Zhang Y, Zhang JL, Luo Z, Zhang J, Chen LL, Yang L. Diverse alternative back-splicing and alternative splicing landscape of circular RNAs. Genome Res , 2016, 26:1277-1287 doi:10.1101/gr.202895.115 2 Yuan Gao, Jinyang Zhang and Fangqing Zhao. Circular RNA identification based on multiple seed matching. Briefings in Bioinformatics (2017) doi: 10.1093/bib/bbx014. 3 Ma XK, Wang MR, Liu CX, Dong R, Carmichael GG, Chen LL and Yang L. A CLEAR pipeline for direct comparison of circular and linear RNA expression. 2019, bioRxiv doi: 10.1101/668657","title":"References"},{"location":"flowchart/","text":"circRNA DAQ Pipeline Flowchart for v0.3.3 :","title":"Flowchart"},{"location":"flowchart/#circrna-daq-pipeline","text":"Flowchart for v0.3.3 :","title":"circRNA DAQ Pipeline"},{"location":"tutorial/","text":"circRNA DAQ Pipeline Tutorial Prerequisites Biowulf account: Biowulf account can be requested here Membership to Ziegelbauer user group on Biowulf. You can check this by typing the following command: bash % groups output: bash CCBR kopardevn Ziegelbauer_lab If Ziegelbauer_lab is not listed then you can email a request to be added to the groups here Location Different versions of circRNA DAQ pipeline have been parked at /data/Ziegelbauer_lab/Pipelines/circRNA % ls -la /data/Ziegelbauer_lab/Pipelines/circRNA output: total 135 drwxrws--T. 6 kopardevn Ziegelbauer_lab 4096 Feb 4 18:27 . drwxrws--T. 3 kopardevn Ziegelbauer_lab 4096 Jan 12 09:05 .. lrwxrwxrwx. 1 kopardevn Ziegelbauer_lab 54 Feb 3 14:29 dev -> /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA drwxrws---. 3 kopardevn Ziegelbauer_lab 4096 Jan 12 09:07 v0.1.0 drwxrws---. 6 kopardevn Ziegelbauer_lab 4096 Jan 12 17:32 v0.2.1 drwxrws---. 6 kopardevn Ziegelbauer_lab 4096 Jan 14 10:24 v0.3.3 drwxrws---. 7 kopardevn Ziegelbauer_lab 4096 Feb 4 18:26 v0.4.0 The exacts versions listed here may changed as newer versions are added. Init To get help about the pipeline you can run: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh --help output: Pipeline Dir: /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA Git Commit/Tag: b2f387c1b6854646d12974cd16da1168d93bb43b v0.4.0-14-gb2f387c run_circrna_daq.sh: run the workflow to DAQ (detect, annotate and quantify circRNAs) USAGE: bash run_circrna_daq.sh <MODE> Required Positional Argument: MODE: [Type: Str] Valid options: a) init <path_to_workdir> : initialize workdir b) run <path_to_workdir>: run with slurm c) reset <path_to_workdir> : DELETE workdir dir and re-init it e) dryrun <path_to_workdir> : dry run snakemake to generate DAG f) unlock <path_to_workdir> : unlock workdir if locked by snakemake g) runlocal <path_to_workdir>: run without submitting to sbatch You can replace v0.4.0 in the above command with the latest version to use a newer version. run_circrna_daq.sh was called test.sh in versions older than v0.4.0 . To initial the working directory run: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh init /scratch/circRNA_daq_test This assumes that /scratch/circRNA_daq_test does not exist before running this command and is at a location where write permissions are available. % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh init /scratch/circRNA_daq_test \u200b output: Pipeline Dir: /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA Git Commit/Tag: b2f387c1b6854646d12974cd16da1168d93bb43b v0.4.0-14-gb2f387c Working Dir: /scratch/circRNA_daq_test /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA /scratch/circRNA_daq_test Logs Dir: /scratch/circRNA_daq_test/logs Stats Dir: /scratch/circRNA_daq_test/stats Done Initializing /scratch/circRNA_daq_test. You can now edit /scratch/circRNA_daq_test/config.yaml and /scratch/circRNA_daq_test/samples.tsv The above command creates /scratch/circRNA_daq_test folder and creates 2 subfolders logs and stats inside that folder along with config.yaml and samples.tsv files. % tree /scratch/circRNA_daq_test \u200b output: /scratch/circRNA_daq_test \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 logs \u251c\u2500\u2500 samples.tsv \u2514\u2500\u2500 stats 2 directories, 2 files config.yaml This file is used to fine tune the execution of the pipeline by setting: sample sheet location ... aka samples.tsv whether to run CLEAR pipeline or not by setting run_clear to True or False describes the location of other resources/indexes/tools etc. Generally, these do NOT need to be changed. samples.tsv Tab delimited definition of sample sheet. The header is fixed and each row represents a sample. It has 3 columns: sampleName = Name of the sample. This has to be unique. path_to_R1_fastq = absolute path to the read1 fastq.gz file. path_to_R2_fastq = absolute path to the read2 fastq.gz file. If the sample was sequenced in single-end mode, then leave this blank. Running init will put the following example file in the workdir supplied and it looks like this: % more /scratch/circRNA_daq_test/samples.tsv output: sampleName path_to_R1_fastq path_to_R2_fastq GI1_N /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R1_001.fastq.gz /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R2_001.fastq.gz GI1_T /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/6_GI112118_tum_S5_R1_001.fastq.gz Dryrun Once the samples.tsv file has been edited appropriately to include the desired samples, it is a good idea to dryrun the pipeline to ensure that everything will work as desired. Dryrun can be run as follows: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh dryrun /scratch/circRNA_daq_test Here is the output of the above command. Run Upon verifying that dryrun is successful. You can then submit the job to the cluster using the following command: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh run /scratch/circRNA_daq_test output: Pipeline Dir: /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA Git Commit/Tag: 37419bc0eb196fb1e137849ebeb2739a1c12126c v0.4.0-16-g37419bc Working Dir: /scratch/circRNA_daq_test [+] Loading python 3.7 ... [+] Loading snakemake 5.24.1 Running... ls: cannot access /scratch/circRNA_daq_test/slurm-*.out: No such file or directory 7930909 7930909 is the jobid returned by the slurm job scheduler on biowulf. This means that the job was successfully submitted, it will spawn off other subjobs which in-turn will be run and outputs will be moved to the results folder created inside the working directory supplied at command line. You can check the status of your queue of jobs in biowulf running: % squeue -u `whoami` output: JOBID PARTITION NAME USER ST TIME NODES NODELIST(REASON) 7930909 ccr,norm circRNA kopardev PD 0:00 1 (None) ST in the above results stands for Status and PD means Pending. The status will change from pending( PD ) to running( R ) to completed as jobs are run on the cluster. Next, just sit tight until the pipeline finishes. You can keep monitoring the queue as shown above. If there are no jobs running on biowulf, then your pipeline has finished (or errored out!) Once completed the output should something like this: % tree /scratch/circRNA_daq_test output: /scratch/circRNA_daq_test \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fastqs \u2502 \u251c\u2500\u2500 GI1_N.R1.fastq.gz -> /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R1_001.fastq.gz \u2502 \u251c\u2500\u2500 GI1_N.R2.fastq.gz -> /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R2_001.fastq.gz \u2502 \u2514\u2500\u2500 GI1_T.R1.fastq.gz -> /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/6_GI112118_tum_S5_R1_001.fastq.gz \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 7658773.7658778.cutadapt.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7658778.cutadapt.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7658779.cutadapt.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7658779.cutadapt.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7659728.fastqc.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659728.fastqc.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7659729.star1p.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659729.star1p.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7659730.ciri.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659730.ciri.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7659731.clear.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659731.clear.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7660529.ciri.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660529.ciri.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7660738.clear.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660738.clear.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7660753.fastqc.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660753.fastqc.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7660754.star1p.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660754.star1p.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7661100.merge_SJ_tabs..err \u2502 \u251c\u2500\u2500 7658773.7661100.merge_SJ_tabs..out \u2502 \u251c\u2500\u2500 7658773.7661134.star2p.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7661134.star2p.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7661135.star2p.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7661135.star2p.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7662317.create_BSJ_bam.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7662317.create_BSJ_bam.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7662319.annotate_circRNA.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7662319.annotate_circRNA.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7662563.annotate_circRNA.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7662563.annotate_circRNA.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7662564.create_BSJ_bam.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7662564.create_BSJ_bam.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7662567.split_BAM_create_BW.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7662567.split_BAM_create_BW.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7663000.create_circexplorer_count_matrix..err \u2502 \u251c\u2500\u2500 7658773.7663000.create_circexplorer_count_matrix..out \u2502 \u251c\u2500\u2500 7658773.7663642.create_ciri_count_matrix..err \u2502 \u251c\u2500\u2500 7658773.7663642.create_ciri_count_matrix..out \u2502 \u251c\u2500\u2500 7658773.7663643.split_BAM_create_BW.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7663643.split_BAM_create_BW.sample=GI1_N.out \u2502 \u2514\u2500\u2500 slurm-7658773.out.gz \u251c\u2500\u2500 qc \u2502 \u2514\u2500\u2500 fastqc \u2502 \u251c\u2500\u2500 GI1_N.R1_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R1_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_N.R1.trim_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R1.trim_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_N.R2_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R2_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_N.R2.trim_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R2.trim_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_T.R1_fastqc.html \u2502 \u251c\u2500\u2500 GI1_T.R1_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_T.R1.trim_fastqc.html \u2502 \u2514\u2500\u2500 GI1_T.R1.trim_fastqc.zip \u251c\u2500\u2500 report.html \u251c\u2500\u2500 results \u2502 \u251c\u2500\u2500 circExplorer_BSJ_count_matrix.txt \u2502 \u251c\u2500\u2500 circExplorer_BSJ_count_matrix_with_annotations.txt \u2502 \u251c\u2500\u2500 circExplorer_count_matrix.txt \u2502 \u251c\u2500\u2500 circExplorer_count_matrix_with_annotations.txt \u2502 \u251c\u2500\u2500 ciri_count_matrix.txt \u2502 \u251c\u2500\u2500 ciri_count_matrix_with_annotations.txt \u2502 \u251c\u2500\u2500 GI1_N \u2502 \u2502 \u251c\u2500\u2500 circExplorer \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.back_spliced_junction.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_circexplorer_parse.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.circularRNA_known.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 low_conf_GI1_N.circularRNA_known.txt \u2502 \u2502 \u251c\u2500\u2500 ciri \u2502 \u2502 \u2502 \u251c\u2500\u2500 CIRIerror.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.bwa.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.bwa.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.ciri.log \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_N.ciri.out \u2502 \u2502 \u251c\u2500\u2500 CLEAR \u2502 \u2502 \u2502 \u251c\u2500\u2500 circ \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 bsj.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 fusion \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 junctions.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 hisat \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sp.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant.txt \u2502 \u2502 \u251c\u2500\u2500 STAR1p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_N_p1.SJ.out.tab \u2502 \u2502 \u251c\u2500\u2500 STAR2p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.ERCC.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.ERCC.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.ERCC.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.hg38.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.hg38.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.hg38.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.MN485971.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.MN485971.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.MN485971.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_000898.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_000898.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_000898.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001664.4.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001664.4.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001664.4.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001716.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001716.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001716.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_006273.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_006273.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_006273.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_007605.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_007605.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_007605.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_009333.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_009333.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_009333.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_045512.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_045512.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_045512.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.readids \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.rRNA.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.rRNA.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.rRNA.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Aligned.sortedByCoord.out.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Aligned.sortedByCoord.out.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_N_p2.SJ.out.tab \u2502 \u2502 \u2514\u2500\u2500 trim \u2502 \u2502 \u251c\u2500\u2500 GI1_N.R1.trim.fastq.gz \u2502 \u2502 \u2514\u2500\u2500 GI1_N.R2.trim.fastq.gz \u2502 \u251c\u2500\u2500 GI1_T \u2502 \u2502 \u251c\u2500\u2500 circExplorer \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.back_spliced_junction.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_circexplorer_parse.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.circularRNA_known.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 low_conf_GI1_T.circularRNA_known.txt \u2502 \u2502 \u251c\u2500\u2500 ciri \u2502 \u2502 \u2502 \u251c\u2500\u2500 CIRIerror.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.bwa.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.bwa.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.ciri.log \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_T.ciri.out \u2502 \u2502 \u251c\u2500\u2500 CLEAR \u2502 \u2502 \u2502 \u251c\u2500\u2500 circ \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 bsj.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 fusion \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 junctions.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 hisat \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sp.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant.txt \u2502 \u2502 \u251c\u2500\u2500 STAR1p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_T_p1.SJ.out.tab \u2502 \u2502 \u251c\u2500\u2500 STAR2p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.ERCC.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.ERCC.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.ERCC.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.hg38.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.hg38.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.hg38.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.MN485971.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.MN485971.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.MN485971.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_000898.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_000898.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_000898.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001664.4.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001664.4.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001664.4.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001716.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001716.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001716.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_006273.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_006273.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_006273.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_007605.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_007605.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_007605.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_009333.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_009333.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_009333.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_045512.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_045512.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_045512.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.readids \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.rRNA.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.rRNA.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.rRNA.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Aligned.sortedByCoord.out.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Aligned.sortedByCoord.out.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_T_p2.SJ.out.tab \u2502 \u2502 \u2514\u2500\u2500 trim \u2502 \u2502 \u251c\u2500\u2500 GI1_T.R1.trim.fastq.gz \u2502 \u2502 \u2514\u2500\u2500 GI1_T.R2.trim.fastq.gz \u2502 \u2514\u2500\u2500 pass1.out.tab \u251c\u2500\u2500 samples.tsv \u251c\u2500\u2500 stats \u2502 \u251c\u2500\u2500 snakemake.log.20210204103112.gz \u2502 \u2514\u2500\u2500 snakemake.stats.20210204103112.gz \u251c\u2500\u2500 submit_script.sbatch Runlocal If you have grabbed an interactive node using sinteractive and have a small test dataset in the samples.tsv and simply want to quickly check if everything works as expected. You can run locally , i.e. directly on the interactive node without submitting to the cluster using: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh runlocal /scratch/circRNA_daq_test This is only for testing purposes, do not use it for running 10s of samples as you will be soon timed out of the interactive node.","title":"Tutorial"},{"location":"tutorial/#circrna-daq-pipeline","text":"","title":"circRNA DAQ Pipeline"},{"location":"tutorial/#tutorial","text":"","title":"Tutorial"},{"location":"tutorial/#prerequisites","text":"Biowulf account: Biowulf account can be requested here Membership to Ziegelbauer user group on Biowulf. You can check this by typing the following command: bash % groups output: bash CCBR kopardevn Ziegelbauer_lab If Ziegelbauer_lab is not listed then you can email a request to be added to the groups here","title":"Prerequisites"},{"location":"tutorial/#location","text":"Different versions of circRNA DAQ pipeline have been parked at /data/Ziegelbauer_lab/Pipelines/circRNA % ls -la /data/Ziegelbauer_lab/Pipelines/circRNA output: total 135 drwxrws--T. 6 kopardevn Ziegelbauer_lab 4096 Feb 4 18:27 . drwxrws--T. 3 kopardevn Ziegelbauer_lab 4096 Jan 12 09:05 .. lrwxrwxrwx. 1 kopardevn Ziegelbauer_lab 54 Feb 3 14:29 dev -> /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA drwxrws---. 3 kopardevn Ziegelbauer_lab 4096 Jan 12 09:07 v0.1.0 drwxrws---. 6 kopardevn Ziegelbauer_lab 4096 Jan 12 17:32 v0.2.1 drwxrws---. 6 kopardevn Ziegelbauer_lab 4096 Jan 14 10:24 v0.3.3 drwxrws---. 7 kopardevn Ziegelbauer_lab 4096 Feb 4 18:26 v0.4.0 The exacts versions listed here may changed as newer versions are added.","title":"Location"},{"location":"tutorial/#init","text":"To get help about the pipeline you can run: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh --help output: Pipeline Dir: /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA Git Commit/Tag: b2f387c1b6854646d12974cd16da1168d93bb43b v0.4.0-14-gb2f387c run_circrna_daq.sh: run the workflow to DAQ (detect, annotate and quantify circRNAs) USAGE: bash run_circrna_daq.sh <MODE> Required Positional Argument: MODE: [Type: Str] Valid options: a) init <path_to_workdir> : initialize workdir b) run <path_to_workdir>: run with slurm c) reset <path_to_workdir> : DELETE workdir dir and re-init it e) dryrun <path_to_workdir> : dry run snakemake to generate DAG f) unlock <path_to_workdir> : unlock workdir if locked by snakemake g) runlocal <path_to_workdir>: run without submitting to sbatch You can replace v0.4.0 in the above command with the latest version to use a newer version. run_circrna_daq.sh was called test.sh in versions older than v0.4.0 . To initial the working directory run: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh init /scratch/circRNA_daq_test This assumes that /scratch/circRNA_daq_test does not exist before running this command and is at a location where write permissions are available. % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh init /scratch/circRNA_daq_test \u200b output: Pipeline Dir: /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA Git Commit/Tag: b2f387c1b6854646d12974cd16da1168d93bb43b v0.4.0-14-gb2f387c Working Dir: /scratch/circRNA_daq_test /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA /scratch/circRNA_daq_test Logs Dir: /scratch/circRNA_daq_test/logs Stats Dir: /scratch/circRNA_daq_test/stats Done Initializing /scratch/circRNA_daq_test. You can now edit /scratch/circRNA_daq_test/config.yaml and /scratch/circRNA_daq_test/samples.tsv The above command creates /scratch/circRNA_daq_test folder and creates 2 subfolders logs and stats inside that folder along with config.yaml and samples.tsv files. % tree /scratch/circRNA_daq_test \u200b output: /scratch/circRNA_daq_test \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 logs \u251c\u2500\u2500 samples.tsv \u2514\u2500\u2500 stats 2 directories, 2 files","title":"Init"},{"location":"tutorial/#configyaml","text":"This file is used to fine tune the execution of the pipeline by setting: sample sheet location ... aka samples.tsv whether to run CLEAR pipeline or not by setting run_clear to True or False describes the location of other resources/indexes/tools etc. Generally, these do NOT need to be changed.","title":"config.yaml"},{"location":"tutorial/#samplestsv","text":"Tab delimited definition of sample sheet. The header is fixed and each row represents a sample. It has 3 columns: sampleName = Name of the sample. This has to be unique. path_to_R1_fastq = absolute path to the read1 fastq.gz file. path_to_R2_fastq = absolute path to the read2 fastq.gz file. If the sample was sequenced in single-end mode, then leave this blank. Running init will put the following example file in the workdir supplied and it looks like this: % more /scratch/circRNA_daq_test/samples.tsv output: sampleName path_to_R1_fastq path_to_R2_fastq GI1_N /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R1_001.fastq.gz /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R2_001.fastq.gz GI1_T /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/6_GI112118_tum_S5_R1_001.fastq.gz","title":"samples.tsv"},{"location":"tutorial/#dryrun","text":"Once the samples.tsv file has been edited appropriately to include the desired samples, it is a good idea to dryrun the pipeline to ensure that everything will work as desired. Dryrun can be run as follows: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh dryrun /scratch/circRNA_daq_test Here is the output of the above command.","title":"Dryrun"},{"location":"tutorial/#run","text":"Upon verifying that dryrun is successful. You can then submit the job to the cluster using the following command: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh run /scratch/circRNA_daq_test output: Pipeline Dir: /data/Ziegelbauer_lab/circRNADetection/scripts/circRNA Git Commit/Tag: 37419bc0eb196fb1e137849ebeb2739a1c12126c v0.4.0-16-g37419bc Working Dir: /scratch/circRNA_daq_test [+] Loading python 3.7 ... [+] Loading snakemake 5.24.1 Running... ls: cannot access /scratch/circRNA_daq_test/slurm-*.out: No such file or directory 7930909 7930909 is the jobid returned by the slurm job scheduler on biowulf. This means that the job was successfully submitted, it will spawn off other subjobs which in-turn will be run and outputs will be moved to the results folder created inside the working directory supplied at command line. You can check the status of your queue of jobs in biowulf running: % squeue -u `whoami` output: JOBID PARTITION NAME USER ST TIME NODES NODELIST(REASON) 7930909 ccr,norm circRNA kopardev PD 0:00 1 (None) ST in the above results stands for Status and PD means Pending. The status will change from pending( PD ) to running( R ) to completed as jobs are run on the cluster. Next, just sit tight until the pipeline finishes. You can keep monitoring the queue as shown above. If there are no jobs running on biowulf, then your pipeline has finished (or errored out!) Once completed the output should something like this: % tree /scratch/circRNA_daq_test output: /scratch/circRNA_daq_test \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 fastqs \u2502 \u251c\u2500\u2500 GI1_N.R1.fastq.gz -> /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R1_001.fastq.gz \u2502 \u251c\u2500\u2500 GI1_N.R2.fastq.gz -> /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/5_GI112118_norm_S4_R2_001.fastq.gz \u2502 \u2514\u2500\u2500 GI1_T.R1.fastq.gz -> /data/Ziegelbauer_lab/circRNADetection/rawdata/ccbr983/fastq2/6_GI112118_tum_S5_R1_001.fastq.gz \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 7658773.7658778.cutadapt.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7658778.cutadapt.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7658779.cutadapt.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7658779.cutadapt.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7659728.fastqc.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659728.fastqc.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7659729.star1p.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659729.star1p.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7659730.ciri.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659730.ciri.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7659731.clear.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7659731.clear.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7660529.ciri.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660529.ciri.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7660738.clear.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660738.clear.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7660753.fastqc.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660753.fastqc.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7660754.star1p.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7660754.star1p.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7661100.merge_SJ_tabs..err \u2502 \u251c\u2500\u2500 7658773.7661100.merge_SJ_tabs..out \u2502 \u251c\u2500\u2500 7658773.7661134.star2p.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7661134.star2p.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7661135.star2p.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7661135.star2p.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7662317.create_BSJ_bam.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7662317.create_BSJ_bam.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7662319.annotate_circRNA.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7662319.annotate_circRNA.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7662563.annotate_circRNA.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7662563.annotate_circRNA.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7662564.create_BSJ_bam.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7662564.create_BSJ_bam.sample=GI1_N.out \u2502 \u251c\u2500\u2500 7658773.7662567.split_BAM_create_BW.sample=GI1_T.err \u2502 \u251c\u2500\u2500 7658773.7662567.split_BAM_create_BW.sample=GI1_T.out \u2502 \u251c\u2500\u2500 7658773.7663000.create_circexplorer_count_matrix..err \u2502 \u251c\u2500\u2500 7658773.7663000.create_circexplorer_count_matrix..out \u2502 \u251c\u2500\u2500 7658773.7663642.create_ciri_count_matrix..err \u2502 \u251c\u2500\u2500 7658773.7663642.create_ciri_count_matrix..out \u2502 \u251c\u2500\u2500 7658773.7663643.split_BAM_create_BW.sample=GI1_N.err \u2502 \u251c\u2500\u2500 7658773.7663643.split_BAM_create_BW.sample=GI1_N.out \u2502 \u2514\u2500\u2500 slurm-7658773.out.gz \u251c\u2500\u2500 qc \u2502 \u2514\u2500\u2500 fastqc \u2502 \u251c\u2500\u2500 GI1_N.R1_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R1_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_N.R1.trim_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R1.trim_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_N.R2_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R2_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_N.R2.trim_fastqc.html \u2502 \u251c\u2500\u2500 GI1_N.R2.trim_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_T.R1_fastqc.html \u2502 \u251c\u2500\u2500 GI1_T.R1_fastqc.zip \u2502 \u251c\u2500\u2500 GI1_T.R1.trim_fastqc.html \u2502 \u2514\u2500\u2500 GI1_T.R1.trim_fastqc.zip \u251c\u2500\u2500 report.html \u251c\u2500\u2500 results \u2502 \u251c\u2500\u2500 circExplorer_BSJ_count_matrix.txt \u2502 \u251c\u2500\u2500 circExplorer_BSJ_count_matrix_with_annotations.txt \u2502 \u251c\u2500\u2500 circExplorer_count_matrix.txt \u2502 \u251c\u2500\u2500 circExplorer_count_matrix_with_annotations.txt \u2502 \u251c\u2500\u2500 ciri_count_matrix.txt \u2502 \u251c\u2500\u2500 ciri_count_matrix_with_annotations.txt \u2502 \u251c\u2500\u2500 GI1_N \u2502 \u2502 \u251c\u2500\u2500 circExplorer \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.back_spliced_junction.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_circexplorer_parse.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.circularRNA_known.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 low_conf_GI1_N.circularRNA_known.txt \u2502 \u2502 \u251c\u2500\u2500 ciri \u2502 \u2502 \u2502 \u251c\u2500\u2500 CIRIerror.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.bwa.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.bwa.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.ciri.log \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_N.ciri.out \u2502 \u2502 \u251c\u2500\u2500 CLEAR \u2502 \u2502 \u2502 \u251c\u2500\u2500 circ \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 bsj.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 fusion \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 junctions.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 hisat \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sp.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant.txt \u2502 \u2502 \u251c\u2500\u2500 STAR1p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p1.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_N_p1.SJ.out.tab \u2502 \u2502 \u251c\u2500\u2500 STAR2p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.ERCC.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.ERCC.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.ERCC.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.hg38.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.hg38.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.hg38.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.MN485971.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.MN485971.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.MN485971.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_000898.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_000898.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_000898.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001664.4.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001664.4.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001664.4.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001716.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001716.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_001716.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_006273.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_006273.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_006273.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_007605.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_007605.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_007605.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_009333.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_009333.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_009333.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_045512.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_045512.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.NC_045512.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.readids \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.rRNA.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.rRNA.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N.BSJ.rRNA.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Aligned.sortedByCoord.out.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Aligned.sortedByCoord.out.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_N_p2.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_N_p2.SJ.out.tab \u2502 \u2502 \u2514\u2500\u2500 trim \u2502 \u2502 \u251c\u2500\u2500 GI1_N.R1.trim.fastq.gz \u2502 \u2502 \u2514\u2500\u2500 GI1_N.R2.trim.fastq.gz \u2502 \u251c\u2500\u2500 GI1_T \u2502 \u2502 \u251c\u2500\u2500 circExplorer \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.back_spliced_junction.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_circexplorer_parse.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.circularRNA_known.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 low_conf_GI1_T.circularRNA_known.txt \u2502 \u2502 \u251c\u2500\u2500 ciri \u2502 \u2502 \u2502 \u251c\u2500\u2500 CIRIerror.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.bwa.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.bwa.log \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.ciri.log \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_T.ciri.out \u2502 \u2502 \u251c\u2500\u2500 CLEAR \u2502 \u2502 \u2502 \u251c\u2500\u2500 circ \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 bsj.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 fusion \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 junctions.bed \u2502 \u2502 \u2502 \u251c\u2500\u2500 hisat \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sp.txt \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant \u2502 \u2502 \u2502 \u2514\u2500\u2500 quant.txt \u2502 \u2502 \u251c\u2500\u2500 STAR1p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p1.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_T_p1.SJ.out.tab \u2502 \u2502 \u251c\u2500\u2500 STAR2p \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.ERCC.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.ERCC.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.ERCC.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.hg38.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.hg38.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.hg38.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.MN485971.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.MN485971.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.MN485971.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_000898.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_000898.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_000898.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001664.4.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001664.4.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001664.4.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001716.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001716.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_001716.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_006273.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_006273.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_006273.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_007605.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_007605.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_007605.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_009333.1.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_009333.1.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_009333.1.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_045512.2.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_045512.2.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.NC_045512.2.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.readids \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.rRNA.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.rRNA.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T.BSJ.rRNA.bw \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Aligned.sortedByCoord.out.bam \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Aligned.sortedByCoord.out.bam.bai \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Chimeric.out.junction \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Log.final.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Log.out \u2502 \u2502 \u2502 \u251c\u2500\u2500 GI1_T_p2.Log.progress.out \u2502 \u2502 \u2502 \u2514\u2500\u2500 GI1_T_p2.SJ.out.tab \u2502 \u2502 \u2514\u2500\u2500 trim \u2502 \u2502 \u251c\u2500\u2500 GI1_T.R1.trim.fastq.gz \u2502 \u2502 \u2514\u2500\u2500 GI1_T.R2.trim.fastq.gz \u2502 \u2514\u2500\u2500 pass1.out.tab \u251c\u2500\u2500 samples.tsv \u251c\u2500\u2500 stats \u2502 \u251c\u2500\u2500 snakemake.log.20210204103112.gz \u2502 \u2514\u2500\u2500 snakemake.stats.20210204103112.gz \u251c\u2500\u2500 submit_script.sbatch","title":"Run"},{"location":"tutorial/#runlocal","text":"If you have grabbed an interactive node using sinteractive and have a small test dataset in the samples.tsv and simply want to quickly check if everything works as expected. You can run locally , i.e. directly on the interactive node without submitting to the cluster using: % bash /data/Ziegelbauer_lab/Pipelines/circRNA/v0.4.0/run_circrna_daq.sh runlocal /scratch/circRNA_daq_test This is only for testing purposes, do not use it for running 10s of samples as you will be soon timed out of the interactive node.","title":"Runlocal"},{"location":"versions/","text":"circRNA DAQ Pipeline Version/Release highlights v0.1.0 base version PE only support v0.2.x SE support added .. PE/SE samples handled concurrently envmodules used in Snakemake in place of module load statements v0.3.x Lookup table for hg38 to hg19 circRNA annotations is updated... this eliminate one-to-many hits from the previous version BSJs extracted as different bam file. flowchart added adding slurmjobid to log/err file names v0.3.1 has significant (>10X) performance improvements at BSJ bam creation v0.3.3 splits BSJ bams into human and viral bams, and also converts them to bigwigs v0.3.4 adds hg38_rRNA_masked_plus_rRNA_plus_viruses_plus_ERCC reference (source:Sarah) v0.4.x v0.4.0 CLEAR added. wrapper script ( run_circrna_daq.sh ) added for local and cluster execution.","title":"Versions"},{"location":"versions/#circrna-daq-pipeline","text":"","title":"circRNA DAQ Pipeline"},{"location":"versions/#versionrelease-highlights","text":"","title":"Version/Release highlights"},{"location":"versions/#v010","text":"base version PE only support","title":"v0.1.0"},{"location":"versions/#v02x","text":"SE support added .. PE/SE samples handled concurrently envmodules used in Snakemake in place of module load statements","title":"v0.2.x"},{"location":"versions/#v03x","text":"Lookup table for hg38 to hg19 circRNA annotations is updated... this eliminate one-to-many hits from the previous version BSJs extracted as different bam file. flowchart added adding slurmjobid to log/err file names v0.3.1 has significant (>10X) performance improvements at BSJ bam creation v0.3.3 splits BSJ bams into human and viral bams, and also converts them to bigwigs v0.3.4 adds hg38_rRNA_masked_plus_rRNA_plus_viruses_plus_ERCC reference (source:Sarah)","title":"v0.3.x"},{"location":"versions/#v04x","text":"v0.4.0 CLEAR added. wrapper script ( run_circrna_daq.sh ) added for local and cluster execution.","title":"v0.4.x"}]}